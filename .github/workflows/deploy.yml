name: ProApp Deployment

on:
  push:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Build Frontend
        working-directory: frontend
        run: |
          npm install
          npm run build

      - name: Upload Frontend-Build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

  build-backend:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Frontend-Build
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: backend/src/main/resources/static

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build Backend mit Maven
        run: mvn -B package --file backend/pom.xml

      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: backend/target/app.jar

  push-to-docker-hub:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Backend Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: backend/target/

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/movietracker:latest
          platforms: linux/amd64

  deploy-to-render:
    runs-on: ubuntu-latest
    needs: push-to-docker-hub
    steps:
      - name: Trigger Render Deployment
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
